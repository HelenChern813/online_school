services:
  web:
    image: ${IMAGE}/myapp:${TAG}
    command: >
        bash -c "python manage.py collectstatc -c --no-input && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    env_file:
      - .env
    volumes:
      - static_volume:/app/static
    depends_on:
      db:
        condition: service_healthy

  nginx:
    image: nginx:1.19.3
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/app/staticfiles
    depends_on:
      - web

  celery:
    image: ${IMAGE}/myapp:${TAG}
    container_name: celery_worker
    command: >
      sh -c "celery -A config worker --loglevel=info"
    env_file:
      - .env
    depends_on:
      - redis
      - db

  celery_beat:
    image: ${IMAGE}/myapp:${TAG}
    container_name: celery_beat
    command: >
      sh -c "celery -A config beat --loglevel=info"
    env_file:
      - .env
    depends_on:
      - redis
      - celery

  db:
    image: postgres:15.1-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_NAME}
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6.2.4-alpine
    container_name: redis
    healthcheck:
      test: redis-cli ping
      interval: 5s
      timeout: 5s
      retries: 5


volumes:
  postgres_data:
  static_volume:
